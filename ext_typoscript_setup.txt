module.extension_builder {
	settings {
		codeTemplateAdditionalRootPath = EXT:vierwd_base/Resources/Private/CodeTemplates/Extbase/

		codeTemplateRootPaths.0 = EXT:extension_builder/Resources/Private/CodeTemplates/Extbase/
		codeTemplateRootPaths.1 = EXT:vierwd_base/Resources/Private/CodeTemplates/Extbase/
		codeTemplatePartialPaths.0 = EXT:extension_builder/Resources/Private/CodeTemplates/Extbase/Partials/
		codeTemplatePartialPaths.1 = EXT:vierwd_base/Resources/Private/CodeTemplates/Extbase/Partials/
	}
}

config.tx_vierwd {
	# disable all post-processing of HTML
	# postProcessHTML = 0

	# Disable browserSync. Can also be set via page.config.tx_vierwd.browserSync
	# Use this setting for e.g. newsletters
	# browserSync = 0

	# Disable hyphenation. Can also be set via page.config.tx_vierwd.hyphenation
	# Use this setting for e.g. newsletters
	# hyphenation = 0

	# Disable automatic adding of rel="noopener" to external links
	# noopener = 0

	# Prepending of absRefPrefix to public URLs of images (when getPublicUrl() is called).
	# Better use $imageService->getImageUri() within template
	prependAbsRefPrefixToPublicUrl = 1

	# Content-Elements get an id-attribute with their element id.
	# translated elements can be prefixed with their original element id.
	# This behaviour is disabled by default
	enableL10nAnchor = 0

	# Disable automatic adding of ids to html-tags. This might be useful for pages which return JSON or other data
	# disableElementId = 1
}

plugin.tx_vierwdbase {
	linkIcons {
		# link-class = EXT:vierwd_example/Resources/Public/static/img/font-awesome/arrow-right.svg
	}
}

lib.parseFunc.externalBlocks.ul.stdWrap.HTMLparser = 1
lib.parseFunc.externalBlocks.ul.stdWrap.HTMLparser.keepNonMatchedTags = 1
lib.parseFunc.externalBlocks.ul.stdWrap.HTMLparser.tags.ul.fixAttrib.class.always = 1
lib.parseFunc.externalBlocks.ul.stdWrap.HTMLparser.tags.ul.fixAttrib.class.default = unordered-list

lib.parseFunc.externalBlocks.ol.stdWrap.HTMLparser = 1
lib.parseFunc.externalBlocks.ol.stdWrap.HTMLparser.keepNonMatchedTags = 1
lib.parseFunc.externalBlocks.ol.stdWrap.HTMLparser.tags.ol.fixAttrib.class.always = 1
lib.parseFunc.externalBlocks.ol.stdWrap.HTMLparser.tags.ol.fixAttrib.class.default = ordered-list

lib.parseFunc_RTE.externalBlocks.ul.stdWrap.HTMLparser = 1
lib.parseFunc_RTE.externalBlocks.ul.stdWrap.HTMLparser.keepNonMatchedTags = 1
lib.parseFunc_RTE.externalBlocks.ul.stdWrap.HTMLparser.tags.ul.fixAttrib.class.always = 1
lib.parseFunc_RTE.externalBlocks.ul.stdWrap.HTMLparser.tags.ul.fixAttrib.class.default = unordered-list

lib.parseFunc_RTE.externalBlocks.ol.stdWrap.HTMLparser = 1
lib.parseFunc_RTE.externalBlocks.ol.stdWrap.HTMLparser.keepNonMatchedTags = 1
lib.parseFunc_RTE.externalBlocks.ol.stdWrap.HTMLparser.tags.ol.fixAttrib.class.always = 1
lib.parseFunc_RTE.externalBlocks.ol.stdWrap.HTMLparser.tags.ol.fixAttrib.class.default = ordered-list

[applicationContext == "Development"]
# ensure, that js is re-rendered with each page request
page.1660920281 = USER_INT
[global]
